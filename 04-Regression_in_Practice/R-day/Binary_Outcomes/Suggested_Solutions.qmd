---
title: "Binary Outcome Regression"
author: "Your Name"
format: pdf
---

```{r setup}
library(ggplot2) # install.packages("ggplot2")
library(fixest) # install.packages("fixest")
```

## Intro

This R day is going to have you practice running regressions with *binary outcomes*. 
The dataset we are working with today consists of patient-level anonymized data from a hospital in Cleveland. 
The data contains a lot of attributes about the patient and the key variable of interest is ``has_heart_problem``. 
This variable equals `1` if they were diagnosed with a heart problem. 
This data was downloaded from the [UCI ML Data Repository](https://archive.ics.uci.edu/dataset/45/heart+disease) and lightly cleaned. 

See the codebook for details on the available covariates. 

```{r}
# setwd("04-Regression_in_Practice/R-day/Binary_Outcomes/")
df <- read.csv("data/heart_disease.csv")
df$age_decade <- floor(df$age / 10) * 10 # Create age decades
head(df)
```


## Linear Probability Model
### Linear Probability Model using Discrete Variable

Estimate a linear probability model where `has_heart_problem` is regressed on indicators for age bins (`i(age_decade)`). Interpret the coefficients. Are there any noticeable trends in the probability of having a heart problem across age decades? Use robust standard errors (vcov = "HC1").

```{r}
est <- feols(has_heart_problem ~ 0 + i(age_decade), data = df, vcov = "HC1")
etable(est)
```

Answer:

The probability of heart problems seems to be growing with age (except from 60 - 70, our estimates shrink slightly).



### Linear Probability Model using Continuous Variables

Estimate a linear probability model of `has_heart_problem` using `age`, `is_male`, `cholestoral`, `chest_pain`, and `resting_blood_pressure`. 
Obtain predicted probabilities for your sample using `predict()`. 
Do any of the predicted probabilities fall outside the 0-1 range? If so, what does this indicate about the limitations of the linear probability model?

```{r}
est <- feols(
  has_heart_problem ~
    age + i(is_male) + cholestoral + i(chest_pain) + resting_blood_pressure,
  data = df,
  vcov = "HC1"
)
etable(est)

df$prob_has_heart_problem <- predict(est)
sum(df$prob_has_heart_problem < 0)
sum(df$prob_has_heart_problem > 1)
```

Answer:

20 people have predicted probabilities below 0, and 1 person has a predicted probability of 1.0040.




## Logistic Regression
### Logistic Regression using a single variable

Estimate a logistic regression model of `has_heart_problem` using only age. Create a prediction grid (`pred_grid`) with a sequence of ages (e.g., `seq(min(df$age), max(df$age), by = 1)`. Predict probabilities using `predict(..., type = "response")` and plot the fitted probabilities against `age`.

```{r}
est_logit <- feglm(
  has_heart_problem ~ age,
  data = df,
  family = "logit",
  vcov = "HC1",
)
pred_grid <- data.frame(age = seq(min(df$age), max(df$age), by = 1))
pred_grid$prob_has_heart_problem <-
  predict(est_logit, newdata = pred_grid)

ggplot() +
  geom_line(
    aes(x = age, y = prob_has_heart_problem),
    data = pred_grid
  ) +
  labs(
    x = "Age",
    y = "Predicted Probability of having Heart Problem"
  )
```



### Interacton between age and gender

Repeat the logistic regression from Question 3, but now estimate separate relationships for males and females. 
You can do this in a single regression using `has_heart_problem ~ 1 + age + i(is_male) + i(is_male, age)`. 
Let's make a new prediction grid using `pred_grid <- expand.grid(is_male = c(0, 1), age = seq(min(df$age), max(df$age), by = 1))`. 
Pass this to `predict` and plot the fitted probabilities for males and females separately on the same plot. 
Use different colors for males and females. 
How does the effect of age on the probability of having a heart problem differ between males and females based on the fitted lines?

```{r}
est_logit <- feglm(
  has_heart_problem ~ 1 + age + i(is_male) + i(is_male, age),
  data = df,
  family = "logit",
  vcov = "HC1",
)
pred_grid <- pred_grid <- expand.grid(
  is_male = c(0, 1),
  age = seq(min(df$age), max(df$age), by = 1)
)
pred_grid$prob_has_heart_problem <-
  predict(est_logit, newdata = pred_grid)

pred_grid$color_label <- ifelse(pred_grid$is_male, "Male", "Female")
ggplot() +
  geom_line(
    aes(x = age, y = prob_has_heart_problem, color = color_label),
    data = pred_grid
  ) +
  labs(
    x = "Age",
    y = "Predicted Probability of having Heart Problem",
    color = "Gender"
  )
```

Answer:

Men have a much higher probability of having heart problems, and it grows more over time compared to females. 


### Evaluating predictions

Estimate a logistic regression model including a `age`, `is_male`, `cholestoral`, `chest_pain`, and `resting_blood_pressure`. 
First find fitted probabilities of having a heart problem for each patient in your sample. 
Predict `has_heart_problem_hat` based on whether the predicted probability exceeds $0.5$. 

Next, evaluate how your classifications compare to the true values. 
Use `table(df$has_heart_problem_hat, df$has_heart_problem, dnn = c("Prediction", "Has Heart Problem"))` to create a cross-tab. 


```{r}
logit_mod <- feglm(
  has_heart_problem ~
    age + i(is_male) + cholestoral + i(chest_pain) + resting_blood_pressure,
  data = df,
  family = "logit"
)
df$pred_prob_heart_problem <- predict(logit_mod)
df$has_heart_problem_hat <- as.numeric(df$pred_prob_heart_problem > 0.5)

table(
  df$has_heart_problem_hat,
  df$has_heart_problem,
  dnn = c("Prediction", "Has Heart Problem")
)

pct_false_positive <- mean(df$has_heart_problem_hat == 1 & df$has_heart_problem == 0)
pct_false_negative <- mean(df$has_heart_problem_hat == 0 & df$has_heart_problem == 1)
```


Questions:
1. What is the percent of cases with false positives? false negatives?
2. If you wanted to be more cautious (fewer false negatives), how should you change your classification procedure?

Answer:

1. False positive rate: `r round(pct_false_positive * 100, 1)`%

False negative rate: `r round(pct_false_negative * 100, 1)`%

2. If I wanted to be more cautious and have fewer false negatives, I would use a lower cutoff (e.g. `df$pred_prob_heart_problem > 0.1`)


